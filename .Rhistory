datazz<-"data/inflammation-01.csv"
rm(list =ls)
rm(list =ls())
dat<-read.csv(file = "data/inflammation-01.csv", header = FALSE)
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
setwd("/Users/ta4ha/Desktop/r-novice-inflammation/data")
dat <- read.csv(file = "data/inflammation-01.csv", header = FALSE)
dat <- read.csv(file = "inflammation-01.csv", header = FALSE)
head(dat)
class(dat)
dat[1,1]
ttt=66
ttt
View(dat)
View(dat)
animal=c("c","f","r")
animal[3:1]
animal[-1]
animal=["m","o","n","k","e","y"]
animal=c("m","o","n","k","e","y")
animal[-1]
animal[-4]
animal[-1:-4]
nu-animal=(animal[5])
animal[3]
nu_animal=(animal[5]+animal[2:3])
nu_animal=(animal[5])+(animal[2:3])
nu_animal=(animal[5,2:3]
saf
setwd("~/Biocomputing/Biocomp-Fall2018-181005-Exercise6")
ls
less(iris.csv)
head(iris.csv)
HW6=read.csv(file="iris.csv",header=FALSE)
head(HW6)
HW6=read.csv(file="iris.csv")
head(HW6)
#Defining a variable with the file to return lines from
iris <- read.csv(file="iris.csv")
k <- iris[6,]
k
k <- iris[1:6,]
k
head(iris)
iris[-2,-2]
k[-2,-2]
k
head(iris)
iris
?tail
tail(iris, 2)
tail(iris, 2, 2)
tail(iris, 2)
?subset
subset(iris, Sepal.width > 3.5)
subset(iris, iris$Sepal.Width > 3.5)
subset(iris$Sepal.Width > 3.5)
subset(iris, iris$Sepal.Width > 3.5)
setosa <- subset(iris, iris$Species = 'setosa')
setosa <- subset(iris, iris$Species == 'setosa')
setosa
?write.csv
write.csv(setosa, file = "setosa.csv")
nrow(iris)
ncol(iris)
# Starting problem 2
# print the last 2 rows in the last 2 columns to the R terminal
iris[149:150,4:5]
iris[149:150,4:5]
head(iris)
summarize(iris)
dim(iris)
dim(iris)
?nrow
nrow(iris)
nrow(iris$Species)
nrow(iris$Species = 'setosa')
nrow(iris$Species == 'setosa')
write.csv(setosa, file = "setosa.csv")
virginica <- subset(iris, iris$Species == 'virginica')
mean(virginica)
mean(virginica$Petal.Length)
max(virginica$Petal.Length)
min(virginica$Petal.Length)
sepalW3.5
sepalW3.5 <- subset(iris, iris$Sepal.Width > 3.5)
sepalW3.5
nrow(iris$Species == setosa)
nrow(iris$Species == 'setosa')
nrow(iris$Species)
grep()
?grep
?nrow
nrow(iris, iris$Species)
nrow(iris$Species)
table(iris$Species)
?table
# get the number of observations for each
# species included in the data set
table(iris)
# get the number of observations for each
# species included in the data set
table(iris$Sepal.Length)
table(iris$Species)
k
k <- 1:6
k <- iris[k,]
k <- 1:6
iris[k,]
k <- 1:6
iris[k,]
k <- 1:10
iris[k,]
rm(list=ls())
setwd("~/Biocomputing/Biocomp-Fall2018-180928-Exercise5")
setwd("~/Biocomputing/Biocomp-Fall2018-180928-Exercise5")
wages=read.csv("wages.csv",stringsAsFactors = FALSE)
edu12 = wages[wages$yearsSchool==12,]
edu12
min12 = min(edu12$wage)
min12
edu16 = wages[wages$yearsSchool==16,]
edu16
min16 = min(edu16$wage)
min16
min16-min12
edu1 = wages[wages$yearsSchool==year1]
# Creating a function to do the same thing as above
compareEd = function(year1, year2){
edu1 = wages[wages$yearsSchool==year1]
min1 = min(edu1$wages)
edu2 = wages[wages$yearsSchool==year2]
min2 = min(edu2$wages)
diff = min1-min2
}
edu1 = wages[wages$yearsSchool==year1]
min1 = min(edu1$wages)
# Creating a function to do the same thing as above
compareEd = function(year1, year2){
edu1 = wages[wages$yearsSchool==year1]
min1 = min(edu1$wages)
edu2 = wages[wages$yearsSchool==year2]
min2 = min(edu2$wages)
diff = min1-min2
}
# Creating a function to do the same thing as above
compareEd = function(year1, year2){
edu1 = wages[wages$yearsSchool==year1]
min1 = min(edu1$wages)
edu2 = wages[wages$yearsSchool==year2]
min2 = min(edu2$wages)
diff = min1-min2
return(diff)
}
compareEd(12,16)
compareEd(12,16)
compareEd(12,16)
# Creating a function to do the same thing as above
compareEd = function(year1, year2){
edu1 = wages[wages$yearsSchool==year1,]
min1 = min(edu1$wage)
edu2 = wages[wages$yearsSchool==year2,]
min2 = min(edu2$wage)
diff = min1-min2
return(diff)
}
compareEd(12,16)
rm(list=ls())
setwd("Users/ta4ha/Documents/Biocomputing/Biocomp-Fall2018-181012-Exercise7")
setwd("/Users/ta4ha/Documents/Biocomputing/Biocomp-Fall2018-181012-Exercise7")
for (number in c(1,2,3,4,5)){}
for (number in c(1,2,3,4,5)){}
for (number in c(1,2,3,4,5)){
rfw
end()
q}
for (number in c(1,2,3,4,5)){
print(paste(number))
}
x=[3,10,4,12,55]
x=c(3,10,4,12,55)
y=numeric(length(x))
y[i]=sum(x[i])
y[i]=sum(x[i])
y[i]=sum(x[1:i])
for(i in 1:length(x)){
y[i]=sum(x[1:i])
}
for(i in 1:length(x)){
y[i]=sum(x[1:i])
}
for(i in 1:length(x)){
y[i]=sum(x[1:i])
}
y[i]=sum(x[1:i])
y=sum(x[1:i])
y[i]=sum(x[1:i])
y[i]=sum(x[1:i])
for(i in 1:length(x)){
y[i]=sum(x[1:i])
}
table(iris$Species)
sepalW3.5 <- subset(iris, iris$Sepal.Width > 3.5)
less iris
avggg=apply(iris,2,mean)
avggg=apply(as.numeric(iris,2,mean))
# Problem 2
# Number of observations for a given species included in the data set
iris <- read.csv(file="iris.csv")
rm(list=ls())
# Problem 2
# Number of observations for a given species included in the data set
iris <- read.csv(file="iris.csv")
iris <- read.csv(file="iris.csv")
